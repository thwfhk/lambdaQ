-- basic examples
(\ x : Bool * Bool . if x.1 then x.2 else false) (true, false)
(\ x : Unit . \ y : Unit . x) unit unit
\ x : Bool * Bool -> Bool . x (true, true)
\ x : Bool * (Bool -> Bool) . x.2 x.1
/ x : Bit . output x
/ (x, y) : Bit # Bit . output (y, x)

\ c : Qubit ~> Qubit . / w : Qubit . capp c to w
/ w : Bit . capp (/ a : Bit . output a)
/ () : One . (w <- gate init1 () ; capp (/ a : Qubit . output a) to w)
\ x : Bool . if x then run (w <- gate init1 () ; capp (/ a : Qubit . output a) to w) else false

/ (a, b) : Qubit # Qubit . (x, y) <- gate CNOT (a, b); output (x, y)

-- hadamard-measure : Circ(qubit,bit)
/ w : Qubit . w' <- gate H w; b <- gate meas w'; output b

-- It needs parametric polymorphism, so we don't support it currently :(
-- inSeq (c1 : Circ(W1,W2)) (c2 : Circ(W2,W3)) : Circ(W1,W3)
\ c1 : W1 ~> W2 . \ c2 : W2 ~> W3 . / w1 : W1 . w2 <- unbox c1 w1; capp c2 w2

/ () : One . a <- gate init0 (); b <- gate new0 (); x <-| lift b; y <- capp (if x then (/ a : Qubit . a <- gate X a; output a) else (/ a : Qubit . a <- gate X a; output a)) to a; y <- gate H y; output y

if true then (/ a : Qubit . a <- gate X a; output a) else (/ a : Qubit . output a)
-- TODO: type fail

/ () : One . a <- gate init0 (); b1 <- gate new0 (); b2 <- gate new1 (); (x, y) <-| lift (b1, b2); z <- capp (if y then (/ a : Qubit . a <- gate X a; output a) else (/ a : Qubit . a <- gate X a; output a)) to a; output z

----------------------------------------------------------------
-- bell00 : Circ(1, qubit ⊗ qubit)
/ () : One . a <- gate init0 (); b <- gate init0 (); a <- gate H a; (a, b) <- gate CNOT (a, b); output (a, b)

-- alice : Circ(qubit ⊗ qubit, bit ⊗ bit)
/ (q, a) : Qubit # Qubit . (q, a) <- gate CNOT (q, a); q <- gate H q; x <- gate meas q; y <- gate meas a; output (x,y)

-- bob : Circ(bit ⊗ bit ⊗ qubit, qubit)
/ (w1, w2, q) : Bit # Bit # Qubit .
    (x1,x2) <-| lift (w1,w2);
    q <- capp (if x2 then X_gate else id) to q;
    capp (if x1 then Z_gate else id) to q;
    output q
/ (x, y, b) : Bit # Bit # Qubit .
    (y,b) <- gate (bit-control X) (y,b);
    (x,b) <- gate (bit-control Z) (x,b);
    () <- gate discard y;
    () <- gate discard x;
    output b

bell00_string = 
OPENQASM 2.0;
include "qelib1.inc";
qreg q0[1];
qreg q1[1];
u3((pi/2),0,pi) q0;
u3(0,0,((pi-0)/2)) q1;
cx q0,q1;
u3(((-(pi))/2),0,((-((0+pi)))/2)) q1;
cx q0,q1;
u3((pi/2),0,0) q1;


----------------------------------------------------------------
-- linearity
/ (a, a) : One # One . output a
/ (a, a) : One # One . output (a, a) -- Success. Is it a bug?